syntax = "proto3";

package ibc.applications.ibc_query.v1;

option go_package = "github.com/cosmos/ibc-go/v4/modules/apps/31-ibc-query/types";

import "gogoproto/gogo.proto";
import "ibc/core/client/v1/client.proto";

// Msg
service Msg {
  // submit query request
  rpc SubmitCrossChainQuery(MsgSubmitCrossChainQuery) returns (MsgSubmitCrossChainQueryResponse);
}

// MsgSubmitCrossChainQuery
message MsgSubmitCrossChainQuery {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string                    id                   = 1;
  string                    path                 = 2;
  ibc.core.client.v1.Height local_timeout_height = 3
      [(gogoproto.moretags) = "yaml:\"timeout_height\"", (gogoproto.nullable) = false];
  uint64                    local_timeout_stamp  = 4;
  uint64                    query_height         = 5;
  string                    client_id            = 6;
  // sender address
  string sender = 7;

  string source_port    = 8;
  string source_channel = 9;
}

// MsgSubmitCrossChainQueryResponse
message MsgSubmitCrossChainQueryResponse {
  string query_id = 1;
  uint64 cap_key  = 2;
}